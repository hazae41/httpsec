(()=>{"use strict";var e,t;!function(e){function t(e){return Array.isArray(e)?e.map(t):e instanceof Error?{name:e.name,message:e.message,cause:t(e.cause)}:e}e.toJSON=t,e.toString=function(e){return JSON.stringify(t(e))}}(e||(e={})),function(e){function t(e){let t=e.split("/");return[t.slice(0,-1).join("/")||".",t.at(-1)||""]}function n(e){return t(e)[1]}function a(e){let t=n(e).split(".");return[t.slice(0,1).join(".")||"",t.at(1)||""]}e.pathnames=t,e.dirname=function(e){return t(e)[0]},e.filename=n,e.filenames=a,e.basename=function(e){return a(e)[0]},e.extension=function(e){return a(e)[1]}}(t||(t={}));class n{files;constructor(e){this.files=e}async uncache(){await caches.delete("#files")}async precache(){let e=[];for(let[t,n]of this.files)e.push(this.defetch(new Request(t),n));await Promise.all(e)}async defetch(n,a){try{let e=await caches.open("#files");if("reload"!==n.cache){let t=await e.match(n);if(null!=t)return t}let i=await fetch(n,{cache:"reload",redirect:"follow",integrity:a}),s=new Response(i.body,i);if(!s.ok){let e=new URL(n.url);if(e.pathname.endsWith("/index.html")){let i=new URL(e);i.pathname=t.dirname(e.pathname);let l=new Request(i,n),r=await fetch(l,{cache:"reload",redirect:"follow",integrity:a}),c=new Response(r.body,r);if(!c.ok)return s;s=c}else{if(!e.pathname.endsWith(".html"))return s;let t=new URL(e);t.pathname=e.pathname.slice(0,-5);let i=new Request(t,n),l=await fetch(i,{cache:"reload",redirect:"follow",integrity:a}),r=new Response(l.body,l);if(!r.ok)return s;s=r}}return e.put(n,s.clone()),s}catch(t){return new Response(e.toString(t),{status:500})}}handle(e){let t=new URL(e.url);t.pathname.endsWith("/")&&(t.pathname=t.pathname.slice(0,-1));let n=this.files.get(t.pathname);if(null!=n)return this.defetch(e,n);if("/"===t.pathname){let n=new URL(t);n.pathname="/index.html";let a=this.files.get(n.pathname);if(null!=a){let t=new Request(e,{mode:"same-origin"}),i=new Request(n,t);return this.defetch(i,a)}}if("/"!==t.pathname){let n=new URL(t);n.pathname+=".html";let a=this.files.get(n.pathname);if(null!=a){let t=new Request(e,{mode:"same-origin"}),i=new Request(n,t);return this.defetch(i,a)}}if("/"!==t.pathname){let n=new URL(t);n.pathname+="/index.html";let a=this.files.get(n.pathname);if(null!=a){let t=new Request(e,{mode:"same-origin"}),i=new Request(n,t);return this.defetch(i,a)}}}}self.addEventListener("install",()=>{self.skipWaiting()});{let e=new n(new Map(FILES));self.addEventListener("activate",t=>{t.waitUntil(e.uncache()),t.waitUntil(e.precache())}),self.addEventListener("fetch",t=>{let n=new URL(t.request.url);if(n.pathname.startsWith("/x/")){let n=new Request(t.request,{mode:"same-origin"}),a=new Request("/",n),i=e.handle(a);if(null==i)return;t.respondWith(i);return}if("/manifest.json"===n.pathname)return void t.respondWith((async()=>{let[e,t]=function(e,t){let[n,...a]=e.split("@");return[n,a.join("@")]}(n.hash.slice(1),"@"),a=await fetch(new URL("/manifest.json",t)).then(e=>e.json()),i=crypto.randomUUID().slice(0,8);return a.scope="/x/".concat(i),a.start_url="/x/".concat(i,"#").concat(e,"@").concat(t),new Response(JSON.stringify(a),{status:200,statusText:"OK",headers:{"Content-Type":"application/json"}})})());let a=e.handle(t.request);null!=a&&t.respondWith(a)})}})();