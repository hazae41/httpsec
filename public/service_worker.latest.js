(()=>{"use strict";var e;!function(e){function t(e){return Array.isArray(e)?e.map(t):e instanceof Error?{name:e.name,message:e.message,cause:t(e.cause)}:e}e.toJSON=t,e.toString=function(e){return JSON.stringify(t(e))}}(e||(e={}));class t{files;constructor(e){this.files=e}async uncache(){await caches.delete("#files")}async precache(){let e=[];for(let[t,n]of this.files)e.push(this.defetch(new Request(t),n));await Promise.all(e)}async defetch(t,n){try{let e=await caches.open("#files");if("reload"!==t.cache){let n=await e.match(t);if(null!=n)return n}let a=await fetch(t,{cache:"reload",redirect:"follow",integrity:n}),s=new Response(a.body,a);return e.put(t,s.clone()),s}catch(t){return new Response(e.toString(t),{status:500})}}handle(e){let t=new URL(e.url);t.pathname.endsWith("/")&&(t.pathname=t.pathname.slice(0,-1));let n=this.files.get(t.pathname);if(null!=n)return this.defetch(e,n);if("/"===t.pathname){let n=new URL(t);n.pathname="/index.html";let a=this.files.get(n.pathname);if(null!=a){let t=new Request(e,{mode:"same-origin"}),s=new Request(n,t);return this.defetch(s,a)}}if("/"!==t.pathname){let n=new URL(t);n.pathname+=".html";let a=this.files.get(n.pathname);if(null!=a){let t=new Request(e,{mode:"same-origin"}),s=new Request(n,t);return this.defetch(s,a)}}if("/"!==t.pathname){let n=new URL(t);n.pathname+="/index.html";let a=this.files.get(n.pathname);if(null!=a){let t=new Request(e,{mode:"same-origin"}),s=new Request(n,t);return this.defetch(s,a)}}}}self.addEventListener("install",()=>{self.skipWaiting()});{let e=new t(new Map(FILES));self.addEventListener("activate",t=>{t.waitUntil(e.uncache()),t.waitUntil(e.precache())}),self.addEventListener("fetch",t=>{let n,a=new URL(t.request.url);if(n=a.pathname.match(/^\/([a-f0-9]+)(\/.*)?$/)){let s=n[1];if(a.pathname==="/".concat(s,"/manifest.json"))return void t.respondWith((async()=>{let[e,t]=function(e,t){let[n,...a]=e.split("@");return[n,a.join("@")]}(a.hash.slice(1),"@"),n=await fetch(new URL("/manifest.json",t)).then(e=>e.json());return n.scope="/".concat(s),n.start_url="/".concat(s,"#").concat(e,"@").concat(t),new Response(JSON.stringify(n),{status:200,statusText:"OK",headers:{"Content-Type":"application/json"}})})());let i=new Request(t.request,{mode:"same-origin"}),l=new Request("/",i),r=e.handle(l);return void(null==r||t.respondWith(r))}let s=e.handle(t.request);null!=s&&t.respondWith(s)})}})();